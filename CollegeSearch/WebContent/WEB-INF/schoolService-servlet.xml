<?xml version="1.0" encoding="UTF-8"?>

    <beans xmlns="http://www.springframework.org/schema/beans"
           xmlns:context="http://www.springframework.org/schema/context"  
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:mvc="http://www.springframework.org/schema/mvc"
           xmlns:p="http://www.springframework.org/schema/p"
           xsi:schemaLocation=
           "http://www.springframework.org/schema/mvc
           http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.0.xsd">
                 
           <mvc:annotation-driven/>
           <mvc:resources mapping="/resources/**" location="/resources/" />
    
           <context:annotation-config/>
           <context:component-scan base-package="web"/>
           <context:component-scan base-package="domain"/>
           
           <bean id="messageSource"
              class="org.springframework.context.support.ResourceBundleMessageSource">
              <property name="basename" value="messages" />
           </bean>
                
           <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
               <property name="interceptors">
                  <list>
                     <ref bean="measurementInterceptor" />
                  </list>
               </property>
           </bean>    
           <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"/>
           <bean id="measurementInterceptor" class="web.MeasurementInterceptor"/> 
          
           <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
               <property name="exceptionMappings">
                  <props>
                    <prop key="service.NoSchoolAvailableException">
                        NoSchoolAvailable
                    </prop>
                    <prop key="java.lang.Exception">
                        error
                    </prop>    
                  </props>
               </property>
               <property name="defaultErrorView" value="error"/>
           </bean>
           
                <!-- View Resolver definition -->
           <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
              <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
              <property name="prefix" value="jsp/"/>
              <property name="suffix" value=".jsp"/>
              <property name="order" value="#{T(org.springframework.core.Ordered).HIGHEST_PRECEDENCE}" />
              
           </bean> 
           
           <!-- View Resolver definition, to handle varity of view types -->
           <bean id="contentNegotiatingResolver"
               class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
               <property name="order" value="#{contentNegotiatingResolver.order+1}" />
               <property name="mediaTypes">
                  <map>
                     <entry key="html" value="text/html"/>
                     <entry key="pdf" value="application/pdf"/>
                     <entry key="xsl" value="application/vnd.ms-excel"/>
                     <entry key="xml" value="application/xml"/>
                     <entry key="json" value="application/json"/>
                  </map>
               </property>
            </bean>

            <bean id="resourceBundleResolver"
                class="org.springframework.web.servlet.view.ResourceBundleViewResolver">
                <property name="order" value="#{contentNegotiatingResolver.order+1}" />
            </bean>
            <bean id="secondaryResourceBundleResolver"
                class="org.springframework.web.servlet.view.ResourceBundleViewResolver">
                <property name="basename" value="secondaryviews" />
                <property name="order" value="#{resourceBundleResolver.order+1}" />
            </bean>
            <bean id="school" class="domain.School"/>
            <!--        
            <bean id="retrieveSchoolService" class="service.RetrieveSchoolService"></bean> 
            <bean id="createSchoolService" class="service.CreateSchoolService"></bean> 
            -->
    </beans>